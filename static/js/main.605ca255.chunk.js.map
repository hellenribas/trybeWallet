{"version":3,"sources":["pages/style/Table.module.css","pages/style/Wallet.module.css","pages/style/Login.module.css","pages/style/Hearder.module.css","pages/style/Footer.module.css","pages/images/logo.svg","pages/images/user-logo.svg","pages/images/wallet-logo.svg","pages/Login.js","actions/index.js","pages/Footer.js","pages/Header.js","pages/Table.js","pages/Wallet.js","App.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","handleInput","target","value","type","checked","setState","name","validate","state","email","password","match","length","isDisabled","this","funcEmail","history","className","style","main","form","htmlFor","id","data-testid","onChange","user","disabled","onClick","push","button","Component","connect","dispatch","emailAction","Footer","footer","href","rel","github","Header","userEmail","despesas","numberDespesa","map","currency","exchangeRates","Number","ask","container","src","logo","alt","wallet","to","reduce","elem3","elem2","toFixed","expenses","Table","redirect","removeExpense","receiveEdit","container_section","link_wallet","table","elem","key","description","tag","method","split","button_container","add","removeAction","Wallet","saveExpensesClick","saveExpenses","prevState","editExpensesClick","editExpenses","exchange","idTarget","fetchCurrenciesProp","currencies","edit","receiveEditOff","container_form","head","title","placeholder","index","link_expenses","React","a","fetch","request","json","data","USDT","keysData","Object","keys","obj","fetchAsk","editExp","App","console","log","exact","path","component","render","INICIAL_STATE","action","concat","filter","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.605ca255.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__x54Ro\",\"main\":\"Table_main__37LH3\",\"container_section\":\"Table_container_section__1qJFN\",\"link_wallet\":\"Table_link_wallet__2Yf0e\",\"table\":\"Table_table__3b0ZN\",\"button_container\":\"Table_button_container__1WrAQ\",\"add\":\"Table_add__3Nlp1\",\"button\":\"Table_button__12JY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wallet_container__lD9OG\",\"background\":\"Wallet_background__sqZE5\",\"form\":\"Wallet_form__1GeRP\",\"container_form\":\"Wallet_container_form__3P1gt\",\"head\":\"Wallet_head__3otmT\",\"title\":\"Wallet_title__V1dAP\",\"edit-pen\":\"Wallet_edit-pen__1zMvs\",\"link_expenses\":\"Wallet_link_expenses__3PKXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__7YOlD\",\"form\":\"Login_form__Pxc-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hearder_container__1K0be\",\"container-logo\":\"Hearder_container-logo__1JCxU\",\"wallet\":\"Hearder_wallet__T6l1v\",\"user\":\"Hearder_user__1PqZp\",\"value\":\"Hearder_value__1k5sn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1f9sq\",\"github\":\"Footer_github__3qbzR\"};","module.exports = __webpack_public_path__ + \"static/media/logo.dc401a86.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-logo.552d6d1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet-logo.5d8d3b97.svg\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { emailAction } from '../actions';\nimport style from './style/Login.module.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n  }\n\n  handleInput = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    }, () => this.validate());\n  }\n\n  validate = () => {\n    const { email, password } = this.state;\n    const numbersix = 6;\n    if (email.match(/^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/)\n    && password.length >= numbersix) {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  }\n\n  render() {\n    const { isDisabled, email } = this.state;\n    const { funcEmail, history } = this.props;\n    return (\n      <main className={ style.main }>\n        <form className={ style.form }>\n          <label htmlFor=\"email\">\n            USUÁRIO\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              data-testid=\"email-input\"\n              onChange={ this.handleInput }\n              className={ style.user }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            SENHA\n            <input\n              type=\"password\"\n              name=\"password\"\n              data-testid=\"password-input\"\n              id=\"password\"\n              onChange={ this.handleInput }\n              className={ style.password }\n            />\n          </label>\n          <button\n            type=\"button\"\n            disabled={ isDisabled }\n            onClick={ () => {\n              funcEmail(email);\n              history.push('/carteira');\n            } }\n            className={ style.button }\n          >\n            ENTRAR\n\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  funcEmail: (email) => dispatch(emailAction(email)),\n});\n\nLogin.propTypes = {\n  funcEmail: Proptypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","// Coloque aqui suas actions\n\nconst EMAIL_ACTION = 'EMAIL_ACTION';\nconst REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nconst RECEIVE_CURRENCIES = 'RECEIVE_CURRENCIES';\nconst REQUEST_ASK = 'REQUEST_ASK';\nconst RECEIVE_ASK = 'RECEIVE_ASK';\nconst REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nconst EDIT_ACTION = 'EDIT_ACTION';\n\nexport const emailAction = (email) => ({ type: EMAIL_ACTION, email });\n\nexport const editAction = (editExp) => ({ type: EDIT_ACTION, editExp });\n\nconst requestCurrencies = () => ({\n  type: REQUEST_CURRENCIES,\n});\n\nconst receiveCurrencies = (currencies) => ({\n  type: RECEIVE_CURRENCIES,\n  currencies,\n});\n\nexport const fetchCurrencies = () => async (dispatch) => {\n  dispatch(requestCurrencies());\n  const request = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const data = await request.json();\n  delete data.USDT;\n  const keysData = Object.keys(data);\n  dispatch(receiveCurrencies(keysData));\n};\n\nconst requestAsk = () => ({\n  type: REQUEST_ASK,\n});\n\nexport const removeAction = (id) => ({\n  type: REMOVE_EXPENSE,\n  id,\n});\n\nconst receiveAsk = (data) => ({\n  type: RECEIVE_ASK,\n  data,\n});\n\nexport const fetchAsk = (expenses) => async (dispatch) => {\n  dispatch(requestAsk());\n  const request = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const exchangeRates = await request.json();\n  const obj = { ...expenses, exchangeRates };\n  dispatch(receiveAsk(obj));\n};\n","import React, { Component } from 'react';\nimport { VscGithub } from 'react-icons/vsc';\nimport style from './style/Footer.module.css';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer\n        className={ style.footer }\n      >\n        <a href=\"https://github.com/hellenribas?tab=repositories\" target=\"_blank\" rel=\"noreferrer\">\n          <VscGithub className={ style.github } />\n        </a>\n\n      </footer>\n    );\n  }\n}\n","import PropTypes, { string } from 'prop-types';\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport logo from './images/logo.svg';\nimport user from './images/user-logo.svg';\nimport wallet from './images/wallet-logo.svg';\nimport style from './style/Hearder.module.css';\n\nclass Header extends Component {\n  render() {\n    const { userEmail, despesas } = this.props;\n\n    const numberDespesa = despesas.map(({ currency, value, exchangeRates }) => (\n      Number(value) * Number(exchangeRates[currency].ask)));\n\n    return (\n      <header className={ style.container }>\n        <section className={ style['container-logo'] }>\n          <img src={ logo } alt=\"logo-trybewallet\" />\n          <h1>TRYBEWALLET</h1>\n        </section>\n        <section className={ style.wallet }>\n          <Link to=\"carteira\">\n            <img src={ wallet } alt=\"wallet-logo\" />\n          </Link>\n          <div className={ style.value }>\n            <div data-testid=\"header-currency-field\">R$</div>\n            <div data-testid=\"total-field\" />\n            {\n              despesas.length > 0\n                ? numberDespesa.reduce((elem3, elem2) => (elem3 + elem2)).toFixed(2)\n                : 0.00\n            }\n\n          </div>\n        </section>\n        <section className={ style.user }>\n          <img src={ user } alt=\"user-logo\" />\n          <p data-testid=\"email-field\">{userEmail}</p>\n        </section>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  despesas: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  userEmail: PropTypes.string,\n  despesas: PropTypes.arrayOf(string),\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n","/* eslint-disable react/jsx-max-depth */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport { removeAction } from '../actions';\nimport Header from './Header';\nimport style from './style/Table.module.css';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  render() {\n    const { expenses, removeExpense, receiveEdit } = this.props;\n    const { redirect } = this.state;\n    return (\n      <div className={ style.container }>\n        <Header />\n        <section className={ style.main }>\n          {expenses.length === 0\n            ? (\n              <section className={ style.container_section }>\n                <Link\n                  to=\"/carteira\"\n                >\n                  <button\n                    type=\"button\"\n                    className={ style.link_wallet }\n                  >\n                    +\n                  </button>\n\n                </Link>\n                <h3>ADICIONE DESPESAS</h3>\n              </section>\n            )\n            : (\n              <table className={ style.table }>\n                <thead>\n                  <tr>\n                    <th>Descrição</th>\n                    <th>Tag</th>\n                    <th>Pagamento</th>\n                    <th>Valor</th>\n                    <th>Moeda</th>\n                    <th>Câmbio</th>\n                    <th>Valor Convertido</th>\n                    <th>Moeda de Conversão</th>\n                    <th>Editar/Excluir</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { expenses.length > 0 && (expenses.map((elem) => (\n                    <tr key={ `${elem.id}` }>\n                      <td>{elem.description}</td>\n                      <td>{elem.tag}</td>\n                      <td>{elem.method}</td>\n                      <td>{Number(elem.value).toFixed(2)}</td>\n                      <td>\n                        {\n                          elem.exchangeRates[elem.currency].name.split('/')[0]\n                        }\n                      </td>\n                      <td>\n                        {\n                          (Number(elem.exchangeRates[elem.currency].ask).toFixed(2))\n                        }\n\n                      </td>\n                      <td>\n                        {\n                          (Number(elem.value)\n                          * Number(elem.exchangeRates[elem.currency].ask))\n                            .toFixed(2)\n                        }\n                      </td>\n                      <td>Real</td>\n                      <td className={ style.button_container }>\n                        <button\n                          type=\"button\"\n                          data-testid=\"edit-btn\"\n                          onClick={ () => {\n                            receiveEdit(elem.id);\n                            this.setState({ redirect: true });\n                          } }\n                        >\n                          Editar\n                        </button>\n                        <button\n                          type=\"button\"\n                          data-testid=\"delete-btn\"\n                          onClick={ () => removeExpense(elem.id) }\n                        >\n                          Excluir\n                        </button>\n                      </td>\n                    </tr>\n                  )))}\n                </tbody>\n              </table>\n            )}\n          { redirect && <Redirect to=\"/carteira\" /> }\n        </section>\n        { expenses.length > 0\n        && (\n          <Link to=\"carteira\" className={ style.add }>\n            <button\n              type=\"button\"\n              className={ style.button }\n            >\n              ADICIONAR MAIS\n\n            </button>\n\n          </Link>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpense: (id) => dispatch(removeAction(id)),\n});\n\nTable.propTypes = {\n  expenses: propTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","/* eslint-disable react/jsx-max-depth */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { BiEditAlt } from 'react-icons/bi';\nimport Header from './Header';\nimport { fetchCurrencies, fetchAsk, editAction } from '../actions';\nimport style from './style/Wallet.module.css';\nimport Footer from './Footer';\n\nconst Alimentação = 'Alimentação';\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      method: 'Dinheiro',\n      currency: 'USD',\n      tag: Alimentação,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchCurrenciesProp } = this.props;\n    fetchCurrenciesProp();\n  }\n\n  handleInput = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n  }\n\n  saveExpensesClick = () => {\n    const { saveExpenses } = this.props;\n    const { value, description, method, currency, tag, id } = this.state;\n    this.setState((prevState) => ({ id: prevState.id + 1 }), () => {\n      saveExpenses({ value, description, method, currency, tag, id });\n      this.setState({\n        value: 0,\n        description: '',\n        method: 'Dinheiro',\n        currency: 'USD',\n        tag: Alimentação,\n      });\n    });\n  }\n\n  editExpensesClick = () => {\n    const { editExpenses, exchange, idTarget } = this.props;\n    const { value, description, method, currency, tag } = this.state;\n    const { exchangeRates } = exchange[idTarget];\n    const id = idTarget;\n    editExpenses({ value, description, method, currency, tag, id, exchangeRates });\n    this.setState({\n      value: 0,\n      description: '',\n      method: 'Dinheiro',\n      currency: 'USD',\n      tag: Alimentação,\n      redirect: true,\n    });\n  }\n\n  render() {\n    const { currencies, edit, receiveEditOff } = this.props;\n    const { value, description, method, currency, tag, redirect } = this.state;\n    return (\n      <div className={ style.container }>\n        <Header />\n        <div className={ style.container_form }>\n          <form className={ style.form }>\n            <div className={ style.head }>\n              <h1 className={ style.title }>ADICIONAR DESPESAS</h1>\n              { edit\n                ? (\n                  <button\n                    type=\"button\"\n                    onClick={ () => {\n                      this.editExpensesClick();\n                      receiveEditOff();\n                    } }\n                  >\n                    <BiEditAlt className={ style['edit-pen'] } />\n\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    onClick={ this.saveExpensesClick }\n                  >\n                    +\n\n                  </button>)}\n            </div>\n            <label htmlFor=\"value\">\n              <span>Quanto você pagou?</span>\n              <input\n                type=\"number\"\n                data-testid=\"value-input\"\n                name=\"value\"\n                id=\"value\"\n                value={ value }\n                onChange={ this.handleInput }\n              />\n            </label>\n            <label htmlFor=\"description\">\n              O que você comprou?\n              <input\n                type=\"text\"\n                data-testid=\"description-input\"\n                name=\"description\"\n                id=\"description\"\n                value={ description }\n                placeholder=\"exemplo: café\"\n                onChange={ this.handleInput }\n              />\n            </label>\n            <label htmlFor=\"category-input\">\n              Qual a categoria?\n              <select\n                id=\"category-input\"\n                data-testid=\"tag-input\"\n                onChange={ this.handleInput }\n                name=\"tag\"\n                value={ tag }\n              >\n                <option value=\"Alimentação\">Alimentação</option>\n                <option value=\"Lazer\">Lazer</option>\n                <option value=\"Trabalho\">Trabalho</option>\n                <option value=\"Transporte\">Transporte</option>\n                <option value=\"Saúde\">Saúde</option>\n              </select>\n            </label>\n            <label htmlFor=\"method-inputs\">\n              Como você pagou?\n              <select\n                data-testid=\"method-input\"\n                id=\"method-inputs\"\n                name=\"method\"\n                value={ method }\n                onChange={ this.handleInput }\n              >\n                <option value=\"Dinheiro\">Dinheiro</option>\n                <option value=\"Cartão de crédito\">Cartão de crédito</option>\n                <option value=\"Cartão de débito\">Cartão de débito</option>\n              </select>\n            </label>\n            <label htmlFor=\"options-currencies\">\n              Qual a Moeda utilizada?\n              <select\n                id=\"options-currencies\"\n                onChange={ this.handleInput }\n                name=\"currency\"\n                data-testid=\"currency-input\"\n                value={ currency }\n              >\n                {currencies\n                  .map((elem, index) => (\n                    <option\n                      key={ `${elem}${index}` }\n                    >\n                      {elem}\n                    </option>))}\n              </select>\n            </label>\n            <Link\n              to=\"/despesas\"\n            >\n              <button type=\"button\" className={ style.link_expenses }>DESPESAS</button>\n            </Link>\n          </form>\n        </div>\n        <Footer />\n        {redirect && <Redirect to=\"/despesas\" />}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrenciesProp: () => dispatch(fetchCurrencies()),\n  saveExpenses: (expenses) => dispatch(fetchAsk(expenses)),\n  editExpenses: (expenses) => dispatch(editAction(expenses)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  exchange: state.wallet.expenses,\n});\n\nWallet.propTypes = {\n  fetchCurrenciesProp: propTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Table from './pages/Table';\nimport Wallet from './pages/Wallet';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      edit: false,\n      idTarget: '',\n    };\n  }\n\n  receiveEdit = (idTarget) => {\n    console.log(idTarget);\n    this.setState({\n      edit: true,\n      idTarget,\n    });\n  }\n\n  receiveEditOff = () => {\n    this.setState({ edit: false });\n  }\n\n  render() {\n    const { edit, idTarget } = this.state;\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route\n          exact\n          path=\"/carteira\"\n          render={ () => (<Wallet\n            edit={ edit }\n            idTarget={ idTarget }\n            receiveEditOff={ this.receiveEditOff }\n          />) }\n        />\n        <Route\n          exact\n          path=\"/despesas\"\n          render={\n            () => (<Table\n              receiveEdit={ this.receiveEdit }\n            />)\n          }\n        />\n        {/* <Table receiveEdit={ this.receiveEdit } /> */}\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst EMAIL_ACTION = 'EMAIL_ACTION';\n\nconst INICIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INICIAL_STATE, action) => {\n  switch (action.type) {\n  case EMAIL_ACTION: return {\n    email: action.email,\n  };\n  default: return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INICIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INICIAL_STATE, action) => {\n  switch (action.type) {\n  case 'REQUEST_CURRENCIES': return { ...state };\n  case 'RECEIVE_CURRENCIES': return {\n    ...state,\n    currencies: state.currencies.concat(action.currencies),\n  };\n  case 'REQUEST_ASK': return { ...state };\n  case 'RECEIVE_ASK': {\n    return {\n      ...state,\n      expenses: [...state.expenses, action.data],\n    };\n  }\n  case 'REMOVE_EXPENSE': return {\n    ...state,\n    expenses: state.expenses.filter(({ id }) => id !== action.id),\n  };\n  case 'EDIT_ACTION': {\n    const { id } = action.editExp;\n    state.expenses[id] = action.editExp;\n    return {\n      ...state,\n      expenses: [...state.expenses],\n    };\n  }\n  default: return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducers = combineReducers({ user, wallet });\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers';\n\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}